<?xml version="1.0" encoding="UTF-8"?>
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，
 你会看到log4j2内部各种详细输出。可以设置成OFF(关闭)或Error(只输出错误信息)
-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<Configuration status="INFO">

  <!-- 日志文件目录和压缩文件目录配置 -->
  <Properties>
    <Property name="app_name">spring-boot-zuulService</Property>
    <Property name="tmp">${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logs}</Property>
    <Property name="log_path">${tmp}/${app_name}</Property>
    <property name="PATTERN">
      %highlight{%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{1.}:%L - %msg%n}{%throwable{short.fileName}}{FATAL=white,ERROR=red, WARN=yellow, INFO=green, DEBUG=green, TRACE=blue}
    </property>
  </Properties>

  <Appenders>

    <!-- 输出控制台日志的配置 -->
    <Console name="console" target="SYSTEM_OUT">
      <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
      <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
      <!-- 输出日志的格式 -->
      <PatternLayout pattern="${PATTERN}"/>
    </Console>

    <!-- 打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
    <RollingRandomAccessFile name="infoFile" fileName="${log_path}/info.log" immediateFlush="false"
      filePattern="${log_path}/$${date:yyyy-MM}/info-%d{MM-dd-yyyy}-%i.info.gz">
      <PatternLayout pattern="${PATTERN}"/>

      <Policies>
        <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
        <SizeBasedTriggeringPolicy size="20 MB"/>
      </Policies>

      <Filters>
        <!-- 只记录info级别信息 -->
        <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
      </Filters>

      <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
      <DefaultRolloverStrategy max="10"/>
    </RollingRandomAccessFile>

    <!-- 存储Warm -->
    <RollingRandomAccessFile name="warmFile" fileName="${log_path}/warm.log" immediateFlush="false"
      filePattern="${log_path}/$${date:yyyy-MM}/warm-%d{MM-dd-yyyy}-%i.warn.gz">
      <PatternLayout pattern="${PATTERN}"/>

      <Policies>
        <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
        <SizeBasedTriggeringPolicy size="20 MB"/>
      </Policies>

      <Filters>
        <!-- 只记录warn级别信息 -->
        <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
      </Filters>

      <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
      <DefaultRolloverStrategy max="10"/>
    </RollingRandomAccessFile>

    <!-- 存储所有error信息 -->
    <RollingRandomAccessFile name="errorFile" fileName="${log_path}/error.log" immediateFlush="false"
      filePattern="${log_path}/$${date:yyyy-MM}/error-%d{MM-dd-yyyy}-%i.error.gz">
      <PatternLayout pattern="${PATTERN}"/>

      <Policies>
        <TimeBasedTriggeringPolicy interval="1" modulate="true"/>
        <SizeBasedTriggeringPolicy size="20 MB"/>
      </Policies>

      <Filters>
        <!-- 只记录error级别信息 -->
        <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
      </Filters>

      <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
      <DefaultRolloverStrategy max="10"/>
    </RollingRandomAccessFile>

  </Appenders>

  <!-- 全局配置，默认所有的Logger都继承此配置 -->
  <Loggers>
    <!-- AsyncRoot - 异步记录日志 - 需要LMAX Disruptor的支持 -->
    <AsyncRoot level="info" additivity="false">
      <AppenderRef ref="console"/>
      <AppenderRef ref="infoFile"/>
      <AppenderRef ref="warmFile"/>
      <AppenderRef ref="errorFile"/>
    </AsyncRoot>
  </Loggers>

</Configuration>